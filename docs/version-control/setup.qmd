---
title: Setup
---

## Make a GitHub Account

Before using GitHub, it is necessary to have a GitHub account.
To make an account, go to the [GitHub website](https://github.com/) and click __Sign Up__, following the prompts to create your account.
As part of the process you will need to verify your email address.
Note that GitHub accounts are associated with people, along the lines of a LinkedIn account, and it may be helpful to have a single personal GitHub account even if you plan to use it outside of your work at RFF.
It is simple to associate multiple email addresses with your account later on, so it is unimportant which email address you create the account with.

## Git Installation

It is necessary to install Git onto any computer from which you wish to interact with local repositories.
Normally, IT has installed Git on RFF computers. If not, please send a request to [IThelp@rff.org](mailto:ithelp@rff.org) to request a git install on an RFF machine.  For personal computers, you may install manually following [these instructions](https://git-scm.com/downloads/win).

## Choose a User Interface
When you install git, it generally will already install a couple of applications you can use to interface with git.

1. __Git Bash/CMD__ – This is just like a command prompt for windows, where you enter text-based commands for git.
This is the industry standard, so it is what we suggest for new git users, and __we will use Git Bash for tutorials on this site__.
Git Bash allows for git commands in addition to standard UNIX commands, whereas Git CMD allows for git commands in addition to standard windows CMD prompt commands.  The examples in this guidance will use this.

![Git Bash](../../images/git-bash.png)\

2. __Git GUI__ – This is a minimalist graphical user interface letting you use git without having to use a command line.
It also allows for simplistic visualization of branches.
While our tutorials will use Git Bash, it should be fairly straightforward to use the Git GUI instead.

![Git Gui](../../images/git-gui.png)\

If you wish to learn a different user interface, check out the list [here](https://git-scm.com/downloads/guis?os=windows), and check with the IT team before installing.
Most of the concepts will be fairly similar to what we share in the guide.

## Optional: Set up SSH Keys

If you will be using Git with private repositories, it is worth setting up a key on your PC so that you can freely pull and push from a remote repository without having to enter your password each time.
Follow [these instructions](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key) for setting up an SSH key, and [these instructions](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account#adding-a-new-ssh-key-to-your-account) for adding it to your GitHub account.

There is a small configuration change we need in order to enable the SSH protocol to work with RFF IT systems.
From a git bash window, run the following lines:

* `touch ~/.ssh/config` - This command creates a new empty file in your user home `directory/.ssh` directory.
* `printf "Host github.com\n  Hostname ssh.github.com\n  Port 443" >> ~/.ssh/config` - This command writes 3 lines to the newly created config file.
If you were to open the file in a text editor, it would look like:

```
Host github.com
  Hostname ssh.github.com
  Port 443
```

Once you have that set up, when cloning a repository to your local folder, simply select "SSH" before copying the URL.


